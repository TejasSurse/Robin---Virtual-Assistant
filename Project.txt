 https://www.youtube.com/playlist?list=PLWqtZHJOTN49HtkbGvjM8DcsrytltF1kP
 
 **Speech Recognition Setup**: 
   ```javascript
   const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;
   ```
   This line checks if the browser supports the standard `SpeechRecognition` API or the older `webkitSpeechRecognition` API and assigns the appropriate one to the `SpeechRecognition` constant.

   ```javascript
   const recognition = new SpeechRecognition();
   ```
   This line creates a new instance of the SpeechRecognition object, which will be used for speech recognition.

3. **Speech Recognition Event Handlers**:
   ```javascript
   recognition.onstart =  function(){
       console.log("Hello Sir");
   }
   ```
   This sets up a callback function to be executed when speech recognition starts. In this case, it logs "Hello Sir" to the console.

   ```javascript
   recognition.onend = function(){
       console.log("Vr deactive");
   }
   ```
   This sets up a callback function to be executed when speech recognition ends. In this case, it logs "Vr deactive" to the console.

4. **Continuous Recognition**:
   ```javascript
   recognition.continuous = true;
   ```
   This line sets the `continuous` property of the recognition object to `true`, allowing continuous recognition rather than stopping after a single recognition.

5. **Button Event Listeners**:
   ```javascript
   startBtn.addEventListener("click" ,()=>{
       recognition.start();
   });
   ```
   This adds a click event listener to the `startBtn` button. When clicked, it calls the `start()` method of the recognition object, initiating speech recognition.

   ```javascript
   stopBtn.addEventListener("click", ()=>{
       recognition.stop();
   });
   ```
   This adds a click event listener to the `stopBtn` button. When clicked, it calls the `stop()` method of the recognition object, stopping speech recognition.

   ```javascript
   speakbtn.addEventListener("click", ()=>{
       let message = "Hello Sir !";
       readOut(message);
   });
   ```
   This adds a click event listener to the `speakbtn` button. When clicked, it calls the `readOut()` function with the message "Hello Sir!".

6. **Text-to-Speech Function**:
   ```javascript
   function readOut(message){
       const speech = new SpeechSynthesisUtterance();
       speech.text = message;
       speech.volume = 9;
       window.speechSynthesis.speak(speech);
       console.log("Speaking Out");
   }
   ```
   This function takes a `message` parameter, creates a new `SpeechSynthesisUtterance` object, sets its text to the provided message, sets the volume, speaks the message using the `speak()` method of `speechSynthesis`, and logs "Speaking Out" to the console.

This JavaScript code sets up speech recognition using the browser's APIs and also includes functionality to speak out predefined messages. It listens for clicks on certain buttons to trigger speech recognition or text-to-speech actions.


// giving our text and model start speech


phase 2



Local storage vs session storage 
local storage - > which is saved always even if  closed tab 
                > ex we have webpage 
                when user logged in 
                logged in info - local storage 

session storage - > it just data for some time 
                  > data is stored until browser not closed 



linkedin - https://www.linkedin.com/in/tejas-surse-a1b651256/


new gif  energy - https://gifdb.com/images/high/illuminating-blue-fire-energy-nyyay4fat5ou3wg4.gif